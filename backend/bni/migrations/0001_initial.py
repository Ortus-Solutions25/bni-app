# Generated by Django 4.2.7 on 2025-09-30 17:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('meeting_day', models.CharField(blank=True, max_length=20)),
                ('meeting_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chapters_chapter',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('normalized_name', models.CharField(db_index=True, max_length=100)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('classification', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='bni.chapter')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chapters_member',
                'ordering': ['first_name', 'last_name'],
                'unique_together': {('chapter', 'normalized_name')},
            },
        ),
        migrations.CreateModel(
            name='TYFCB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('currency', models.CharField(default='AED', max_length=3)),
                ('within_chapter', models.BooleanField(default=True)),
                ('date_closed', models.DateField(auto_now_add=True)),
                ('week_of', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('giver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tyfcbs_given', to='bni.member')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tyfcbs_received', to='bni.member')),
            ],
            options={
                'verbose_name': 'TYFCB',
                'verbose_name_plural': 'TYFCBs',
                'db_table': 'analytics_tyfcb',
                'ordering': ['-date_closed'],
            },
        ),
        migrations.CreateModel(
            name='OneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_date', models.DateField(auto_now_add=True)),
                ('week_of', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('member1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_to_ones_as_member1', to='bni.member')),
                ('member2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_to_ones_as_member2', to='bni.member')),
            ],
            options={
                'verbose_name': 'One-to-One Meeting',
                'verbose_name_plural': 'One-to-One Meetings',
                'db_table': 'analytics_onetoone',
                'ordering': ['-meeting_date'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_year', models.CharField(help_text="e.g., '2024-06' for June 2024", max_length=7)),
                ('slip_audit_file', models.FileField(upload_to='monthly_reports/slip_audits/')),
                ('member_names_file', models.FileField(blank=True, null=True, upload_to='monthly_reports/member_names/')),
                ('referral_matrix_data', models.JSONField(blank=True, default=dict)),
                ('oto_matrix_data', models.JSONField(blank=True, default=dict)),
                ('combination_matrix_data', models.JSONField(blank=True, default=dict)),
                ('tyfcb_inside_data', models.JSONField(blank=True, default=dict)),
                ('tyfcb_outside_data', models.JSONField(blank=True, default=dict)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_reports', to='bni.chapter')),
            ],
            options={
                'db_table': 'chapters_monthlyreport',
                'ordering': ['-month_year'],
                'unique_together': {('chapter', 'month_year')},
            },
        ),
        migrations.CreateModel(
            name='DataImportSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('records_processed', models.PositiveIntegerField(default=0)),
                ('referrals_created', models.PositiveIntegerField(default=0)),
                ('one_to_ones_created', models.PositiveIntegerField(default=0)),
                ('tyfcbs_created', models.PositiveIntegerField(default=0)),
                ('errors_count', models.PositiveIntegerField(default=0)),
                ('success', models.BooleanField(default=True)),
                ('error_details', models.JSONField(blank=True, default=list)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bni.chapter')),
                ('imported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_dataimportsession',
                'ordering': ['-import_date'],
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_given', models.DateField(auto_now_add=True)),
                ('week_of', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_given', to='bni.member')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_received', to='bni.member')),
            ],
            options={
                'db_table': 'analytics_referral',
                'ordering': ['-date_given'],
                'unique_together': {('giver', 'receiver', 'date_given')},
            },
        ),
        migrations.CreateModel(
            name='MemberMonthlyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referrals_given', models.IntegerField(default=0)),
                ('referrals_received', models.IntegerField(default=0)),
                ('one_to_ones_completed', models.IntegerField(default=0)),
                ('tyfcb_inside_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tyfcb_outside_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('missing_otos', models.JSONField(blank=True, default=list, help_text="Member IDs they haven't done OTOs with")),
                ('missing_referrals_given_to', models.JSONField(blank=True, default=list, help_text="Member IDs they haven't given referrals to")),
                ('missing_referrals_received_from', models.JSONField(blank=True, default=list, help_text="Member IDs they haven't received referrals from")),
                ('priority_connections', models.JSONField(blank=True, default=list, help_text='Members appearing in multiple missing lists')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_stats', to='bni.member')),
                ('monthly_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_stats', to='bni.monthlyreport')),
            ],
            options={
                'db_table': 'chapters_membermonthlystats',
                'ordering': ['member__first_name'],
                'unique_together': {('member', 'monthly_report')},
            },
        ),
    ]
