"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-b!bd3gycxy^srur!2ezi)i635ym@g9c$0p1a@$!b@uip(c02s(')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

# Add Vercel hosts
if os.environ.get('VERCEL'):
    ALLOWED_HOSTS.extend(['.vercel.app', '.vercel.com'])


# Application definition

INSTALLED_APPS = [
    # Third party apps
    "rest_framework",
    "corsheaders",
    # Our apps
    "chapters",
    "members",
    "reports",
    "analytics",
    "uploads",
    "bni",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = []

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Parse DATABASE_URL if provided (for production)
DATABASE_URL = os.environ.get('DATABASE_URL')

if DATABASE_URL:
    # Parse Supabase/PostgreSQL connection string
    # Format: postgresql://user:password@host:port/database
    import dj_database_url

    # Parse the connection string
    db_config = dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)

    # Add additional options for Supabase
    db_config['OPTIONS'] = {
        'sslmode': 'require',
        'connect_timeout': 10,
    }

    DATABASES = {
        "default": db_config
    }
else:
    # Development - use SQLite
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }


# No authentication - removed auth system


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Only use compressed storage if staticfiles exist
if os.path.exists(BASE_DIR / "staticfiles"):
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
else:
    STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

# Media files
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# REST Framework settings - no auth
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [],  # No authentication
    "UNAUTHENTICATED_USER": None,  # Don't use Django User model
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 100,
}

# CORS settings
CORS_ALLOWED_ORIGINS = os.environ.get(
    "CORS_ALLOWED_ORIGINS",
    "http://localhost:3000,http://127.0.0.1:3000"
).split(",")

# For Vercel deployments, allow all Vercel domains
if os.environ.get('VERCEL') or any('.vercel.app' in origin for origin in CORS_ALLOWED_ORIGINS):
    CORS_ALLOWED_ORIGIN_REGEXES = [
        r"^https://.*\.vercel\.app$",
    ]

CORS_ALLOW_CREDENTIALS = True
